services:
  postgres:
    image: postgres:15-alpine
    container_name: autoscaling-postgres
    environment:
      - POSTGRES_DB=autoscaling
      - POSTGRES_USER=autoscaling_user
      - POSTGRES_PASSWORD=autoscaling_pass
    ports:
      - "5433:5432"  # Puerto externo 5433 para evitar conflictos
    volumes:
      - postgres-data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - app-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U autoscaling_user -d autoscaling"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./backend
    container_name: autoscaling-backend
    ports:
      - "5000:5000"
    environment:
      - PORT=5000
      - DB_PATH=/app/data/visits.db
      # Para cuando uses PostgreSQL en producci√≥n:
      # - DATABASE_URL=postgresql://autoscaling_user:autoscaling_pass@postgres:5432/autoscaling
    volumes:
      - ./backend:/app
      - backend-data:/app/data
    restart: unless-stopped
    networks:
      - app-network
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    build: ./frontend
    container_name: autoscaling-frontend
    ports:
      - "80:80"
    depends_on:
      - backend
    restart: unless-stopped
    networks:
      - app-network

volumes:
  backend-data:
  postgres-data:

networks:
  app-network:
    driver: bridge
